<?php
//p.166 リファレンスカウントとオブジェクトの寿命

//リファレンスカウントとはガベージコレクションの実装の1つ
//オブジェクトを指し示す変数（参照）がいくつあるかを記録
//参照数が変わる度に値を更新
//ゼロになったときにオブジェクトを破棄

class RefClass
{
    public function __construct()
    {
        echo __CLASS__, ' が生成されました', PHP_EOL;
    }

    public function __destruct()
    {
        echo __CLASS__, ' が破棄されました', PHP_EOL;
    }
}

echo '** プログラム開始', PHP_EOL;
echo '** new RefClass()', PHP_EOL;
$a = new RefClass();                //リファレンスカウント1
echo '** $b = $a', PHP_EOL;
$b = $a;                            //リファレンスカウント2
echo '** unset $a', PHP_EOL;
unset($a);                          //リファレンスカウント1
echo '** unset $b', PHP_EOL;
unset($b);                          //リファレンスカウント0
echo '** プログラム終了', PHP_EOL;

//オブジェクトの寿命は参照するものが1つもなくなるまで
//PHPはプログラムの実行終了時に自動的にすべてのリソースを開放する

//リファレンスカウントの欠点
//互いに参照しあうオブジェクト（循環参照）の回収ができない
//サーバーの設定等により循環参照をもつオブジェクトのタイミングが変わる
//デストラクタが呼ばれるタイミングに依存したコードを書かない方がいい


//p.169 変数のリファレンスとコピーオンライト

//変数の参照もオブジェクトの参照と同様に扱われている
//内部的にはリファレンスカウントが存在している
//PHPでは変数を値渡しした際にもコピーオンライトという仕組みにより
//内部的には参照として扱われている場合がある

$a = 1;
$b = $a; //参照渡ししてないけど実は参照を保持してる
$b = 2;  //変更されるとリファレンスカウントが1つ減る